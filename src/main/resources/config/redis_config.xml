<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:cache="http://www.springframework.org/schema/cache"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd

			http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd">
	
	<!-- redis主库配置开始 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.pool.maxTotal}"/>
	    <property name="maxIdle" value="${redis.pool.maxIdle}" />
	    <property name="minIdle" value="${redis.pool.minIdle}" />
		<property name="maxWaitMillis" value="${redis.pool.maxWait}"/>
	    <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>
	
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" destroy-method="destroy">
    	<property name="hostName" value="${redis.host}" />
    	<property name="port" value="${redis.port}" />
    	<property name="poolConfig" ref="jedisPoolConfig" />
    	<property name="database" value="${redis.database}" />
    	<property name="timeout" value="10000" />
    	<property name="usePool" value="true" />
		<property name="password" value="${redis.password}"/>
    </bean>

	<!--	<bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>-->
	<!--	<bean id="jackson2JsonRedisSerializer"-->
	<!--		  class="org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer"/>-->
	<!--    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref="jedisConnectionFactory">-->
	<!--        <property name="keySerializer" ref="stringRedisSerializer"/>-->
	<!--		<property name="hashKeySerializer" ref="stringRedisSerializer"/>-->
	<!--		<property name="hashValueSerializer" ref="stringRedisSerializer"/>-->
	<!--		<property name="valueSerializer" ref="stringRedisSerializer"/>-->
	<!--    </bean>-->
    <!-- redis主库配置结束 -->

    <!-- redis注解配置 -->
	<bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
		<constructor-arg index="0" ref="redisTemplate" />
	</bean>
	<cache:annotation-driven mode="proxy" cache-manager="cacheManager" />
	<!-- redis注解配置结束 -->
</beans>